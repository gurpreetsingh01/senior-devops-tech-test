name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

env:
  AWS_REGION: eu-west-1
  ECR_REPO: ecr-repo-cartrawler
  CLUSTER_NAME: eks_cluster_cartrawler
  NAMESPACE: jenkins
  

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  lint:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v3

      - name: Lint YAML
        uses: ibiqlik/action-yamllint@v3
        continue-on-error: true

      - name: Validate K8s Manifests with kubeval
        run: |
          curl -sLO https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          ./kubeval k8s/*.yaml || echo "kubeval completed with errors, but continuing..."

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Run Mocked Unit Tests
        run: |
          echo "Mocking unit tests..."
          # replace this with actual test command
          exit 0

  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActionsECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker tag $ECR_REPO:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActionsEKSDeploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          IMAGE_TAG=${{ github.sha }}
          sed -i "s|image: .*|image: ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG|" k8s/deployment.yaml
          kubectl apply -n $NAMESPACE -f k8s/

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Rollback logic here..."
          # Optional rollback: `kubectl rollout undo deployment/<your-deployment> -n $NAMESPACE`
